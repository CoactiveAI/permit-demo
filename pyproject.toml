[tool.poetry]
name = "permit-demo"
version = "0.1.0"
description = ""
authors = ["Steph Ahart <steph@coactive.io>"]
readme = "README.md"
package-mode = false


[tool.poetry.dependencies]
python = "^3.12"
pydantic-settings = "^2.8.0"
permit = "^2.7.3"
anyio = "^4.8.0"

[tool.poetry.group.dev.dependencies]
isort = "^5.13.2"
flake8 = "^7.1.1"
pytest = "^8.3.2"
mypy = "^1.11.1"
pytest-asyncio = "^0.23.8"
ruff = "^0.8.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
include = 'app\/.*\.py$|test\/.*\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \venv
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | generated
    | terraform
  )/
)
'''

[tool.isort]
src_paths = ["src", "test"]
profile = "black"
line_length = 100
multi_line_output = 3
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'FIRSTPARTY', 'LOCALFOLDER']
force_sort_within_sections = true
force_alphabetical_sort_within_sections = true
extend_skip = "generated"
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
show_error_codes = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
ignore_missing_imports = true # flask_httpauth
exclude = ["venv", ".venv", "terraform"]

# [tool.pytest.ini_options]
# asyncio_mode = "auto"

[virtualenvs]
   in-project = true